# fmt: off
# ruff: noqa

# DO NOT EDIT THIS FILE.
# IT IS AUTOMATICALLY GENERATED BY /build_tools/generate_data_ops_stub.py

from typing import Callable

from skrub._data_ops._skrub_namespace import SkrubNamespace

class DataOp:
    skb: SkrubNamespace
    def __abs__(*args, **kwargs) -> DataOp: ...
    def __add__(*args, **kwargs) -> DataOp: ...
    def __all__(*args, **kwargs) -> DataOp: ...
    def __and__(*args, **kwargs) -> DataOp: ...
    def __call__(*args, **kwargs) -> DataOp: ...
    def __concat__(*args, **kwargs) -> DataOp: ...
    def __deepcopy__(*args, **kwargs) -> DataOp: ...
    def __dir__(*args, **kwargs) -> DataOp: ...
    def __eq__(*args, **kwargs) -> DataOp: ...
    def __floordiv__(*args, **kwargs) -> DataOp: ...
    def __format__(*args, **kwargs) -> DataOp: ...
    def __ge__(*args, **kwargs) -> DataOp: ...
    def __getattr__(*args, **kwargs) -> DataOp: ...
    def __getitem__(*args, **kwargs) -> DataOp: ...
    def __gt__(*args, **kwargs) -> DataOp: ...
    def __inv__(*args, **kwargs) -> DataOp: ...
    def __invert__(*args, **kwargs) -> DataOp: ...
    def __le__(*args, **kwargs) -> DataOp: ...
    def __len__(*args, **kwargs) -> DataOp: ...
    def __lshift__(*args, **kwargs) -> DataOp: ...
    def __lt__(*args, **kwargs) -> DataOp: ...
    def __matmul__(*args, **kwargs) -> DataOp: ...
    def __mod__(*args, **kwargs) -> DataOp: ...
    def __mul__(*args, **kwargs) -> DataOp: ...
    def __ne__(*args, **kwargs) -> DataOp: ...
    def __neg__(*args, **kwargs) -> DataOp: ...
    def __not__(*args, **kwargs) -> DataOp: ...
    def __or__(*args, **kwargs) -> DataOp: ...
    def __pos__(*args, **kwargs) -> DataOp: ...
    def __pow__(*args, **kwargs) -> DataOp: ...
    def __radd__(*args, **kwargs) -> DataOp: ...
    def __rand__(*args, **kwargs) -> DataOp: ...
    def __rconcat__(*args, **kwargs) -> DataOp: ...
    def __repr__(*args, **kwargs) -> DataOp: ...
    def __req__(*args, **kwargs) -> DataOp: ...
    def __rfloordiv__(*args, **kwargs) -> DataOp: ...
    def __rge__(*args, **kwargs) -> DataOp: ...
    def __rgt__(*args, **kwargs) -> DataOp: ...
    def __rle__(*args, **kwargs) -> DataOp: ...
    def __rlshift__(*args, **kwargs) -> DataOp: ...
    def __rlt__(*args, **kwargs) -> DataOp: ...
    def __rmatmul__(*args, **kwargs) -> DataOp: ...
    def __rmod__(*args, **kwargs) -> DataOp: ...
    def __rmul__(*args, **kwargs) -> DataOp: ...
    def __rne__(*args, **kwargs) -> DataOp: ...
    def __ror__(*args, **kwargs) -> DataOp: ...
    def __rpow__(*args, **kwargs) -> DataOp: ...
    def __rrshift__(*args, **kwargs) -> DataOp: ...
    def __rshift__(*args, **kwargs) -> DataOp: ...
    def __rsub__(*args, **kwargs) -> DataOp: ...
    def __rtruediv__(*args, **kwargs) -> DataOp: ...
    def __rxor__(*args, **kwargs) -> DataOp: ...
    def __sklearn_clone__(*args, **kwargs) -> DataOp: ...
    def __skrub_short_repr__(*args, **kwargs) -> DataOp: ...
    def __sub__(*args, **kwargs) -> DataOp: ...
    def __truediv__(*args, **kwargs) -> DataOp: ...
    def __xor__(*args, **kwargs) -> DataOp: ...
    def _ipython_key_completions_(*args, **kwargs) -> DataOp: ...
    def _repr_html_(*args, **kwargs) -> DataOp: ...

def X(*args, **kwargs) -> DataOp: ...
def as_data_op(*args, **kwargs) -> DataOp: ...
def eval_mode(*args, **kwargs) -> DataOp: ...
def var(*args, **kwargs) -> DataOp: ...
def y(*args, **kwargs) -> DataOp: ...
def deferred(*args, **kwargs) -> Callable: ...
